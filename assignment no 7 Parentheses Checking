#include <stdio.h>
#include <stdlib.h>

#define MAX 100

char stack[MAX];
int top = -1;

void push(char ch) {
    if (top == MAX - 1) {
        printf("Stack Overflow\n");
        return;
    }
    stack[++top] = ch;
}

char pop() {
    if (top == -1) {
        return '\0';
    }
    return stack[top--];
}

int isMatchingPair(char open, char close) {
    return (open == '(' && close == ')') ||
           (open == '{' && close == '}') ||
           (open == '[' && close == ']');
}

int areParenthesesBalanced(char *expr) {
    for (int i = 0; expr[i] != '\0'; i++) {
        char ch = expr[i];
        if (ch == '(' || ch == '{' || ch == '[') {
            push(ch);
        } else if (ch == ')' || ch == '}' || ch == ']') {
            char open = pop();
            if (!isMatchingPair(open, ch)) {
                return 0;
            }
        }
    }
    return top == -1;
}

int main() {
    char expression[MAX];

    printf("Enter an Expression : ");
    scanf("%s", expression);

    if (areParenthesesBalanced(expression))
        printf("Balanced Parentheses\n");
    else
        printf("Unbalanced Parentheses\n");

    return 0;
}
